//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAPM2.Models
{
    using System;
    using System.Collections.Generic;
    using System.Linq;

    public partial class UpdateChapter
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public UpdateChapter()
        {
            this.ChapterImages = new HashSet<ChapterImage>();
        }

        public int ChapterID { get; set; }
        public Nullable<int> ProductID { get; set; }
        public string EpisodeChapterName { get; set; }
        public Nullable<System.DateTime> DateAdded { get; set; }

        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<ChapterImage> ChapterImages { get; set; }

        // Thêm thuộc tính để quản lý lịch sử đọc
        public virtual ICollection<ReadingHistory> ReadingHistories { get; set; }
        public virtual Product Product { get; set; }
    }
    public class ChapterService
    {
        public static List<UpdateChapter> GetChaptersByProductId(int productId)
        {
            using (var db = new WebStory2Entities1())
            {
                // Kiểm tra nếu productId hợp lệ
                if (productId <= 0)
                {
                    return new List<UpdateChapter>(); // Trả về danh sách rỗng nếu ID không hợp lệ
                }
                // Query to retrieve chapters by ProductID
                var chapters = db.UpdateChapters
                                 .Include("Product") // Include related ChapterImages if needed
                                 .Where(ch => ch.ProductID == productId)
                                 .ToList();

                return chapters;
            }
        }
        public class ChapterImageDetailViewModel
        {
            public Product Product { get; set; } = new Product(); // Khởi tạo đối tượng mặc định
            public Category Category { get; set; }
            public List<Category> Categories { get; set; } = new List<Category>(); // Khởi tạo danh sách rỗng
            public List<UpdateChapter> Chapters { get; set; } = new List<UpdateChapter>(); // Khởi tạo danh sách rỗng
        }
    }
}
