@model DAPM2.Models.UpdateChapter

@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Edit Chapter</title>

    <!-- Bootstrap CSS -->
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">

    <style>
        body {
            background-color: #f8f9fa;
        }

        .form-container {
            max-width: 600px;
            margin: 50px auto;
            padding: 30px;
            background-color: white;
            box-shadow: 0 0 15px rgba(0, 0, 0, 0.1);
            border-radius: 8px;
        }

        h4 {
            margin-bottom: 20px;
            font-weight: 600;
            color: #343a40;
        }

        .btn-save {
            background-color: #28a745;
            color: white;
        }

            .btn-save:hover {
                background-color: #218838;
            }

        .btn-back {
            margin-top: 15px;
            display: block;
            text-align: center;
        }
    </style>
</head>

<body>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-container">
            <h4>Edit Chapter</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group">
                @Html.LabelFor(model => model.ChapterID, new { @class = "control-label" })
                @Html.EditorFor(model => model.ChapterID, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.ChapterID, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ProductID, new { @class = "control-label" })
                @Html.EditorFor(model => model.ProductID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProductID, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.EpisodeChapterName, new { @class = "control-label" })
                @Html.EditorFor(model => model.EpisodeChapterName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EpisodeChapterName, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                <button type="submit" class="btn btn-save btn-block">Save</button>
            </div>
        </div>
    }

    <div class="btn-back">
        @Html.ActionLink("Back to List", "Detail", "Detail", new { id = Model.ProductID }, new { @class = "btn btn-secondary" })
    </div>

    <!-- Bootstrap JS -->
    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.5.2/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>
