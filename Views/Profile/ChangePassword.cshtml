@model DAPM2.Models.ChangePasswordViewModel

@{
    Layout = "~/Views/Shared/_ProfileLayout.cshtml";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>Change Password</title>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
</head>
<body>
    <div class="container mt-5">
        <div class="row justify-content-center">
            <div class="col-md-6">
                <div class="card shadow-sm">
                    <div class="card-header bg-dark text-white">
                        <h3 class="mb-0">Change Password</h3>
                    </div>
                    <div>
                        <!-- Hiển thị thông báo nếu có -->
                        @if (TempData["ErrorMessage"] != null)
                        {
                            <div class="alert alert-danger" role="alert">
                                @TempData["ErrorMessage"]
                            </div>
                        }
                        @if (TempData["SuccessMessage"] != null)
                        {
                            <div class="alert alert-success" role="alert">
                                @TempData["SuccessMessage"]
                            </div>
                        }
                    </div>
                    <div class="card-body">
                        @using (Html.BeginForm())
                        {
                            @Html.AntiForgeryToken()
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                            <div class="form-group">
                                @Html.LabelFor(model => model.OldPassword, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.OldPassword, new { htmlAttributes = new { @class = "form-control", type = "password" } })
                                @Html.ValidationMessageFor(model => model.OldPassword, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.NewPassword, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.NewPassword, new { htmlAttributes = new { @class = "form-control", type = "password" } })
                                @Html.ValidationMessageFor(model => model.NewPassword, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control", type = "password" } })
                                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group text-center">
                                <button type="submit" class="btn btn-success btn-block">Save</button>
                            </div>
                        }
                    </div>
                    <div class="card-footer text-center">
                        @Html.ActionLink("Back to Profile", "ProfileUser", null, new { @class = "btn btn-secondary" })
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
</body>
</html>
